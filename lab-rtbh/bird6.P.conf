router id 0.0.0.100;
include "bird/common.conf";

# We assume that our clients are single-homed. Send them a default and
# our virtual backbone.
protocol static static_noexport_routes {
  route 2001:db8:b::/48 reject;
  route ::/0 reject;
}

# Push routes to kernel (and turn them to blackhole routes if they have the right community)
filter export_kernel {
  if (65000, 9999) ~ bgp_community then {
    dest = RTD_BLACKHOLE;
    accept;
  }
  accept;
}

filter import_kernel {
  reject;
}

include "bird/kernel.conf";

# RTBH server: accept any /64 routes but tag them with the appropriate community
filter import_rtbh {
  if (net.len != 64) then reject;
  bgp_community.empty;
  bgp_community.add((65000, 9999));
  accept;
}

protocol bgp rtbh_65000 {
  local as 65000;
  neighbor 2001:db8:a1::2 as 65000;
  description "RTBH server";
  import filter import_rtbh;
  export none;
}

# Clients
template bgp transit_client {
  local as 65000;
  export where proto = "static_noexport_routes";
  import limit 1000;
}

protocol bgp C1_65001 from transit_client {
  neighbor 2001:db8:a2::2 as 65001;
  description "C1 65001";
  import where bgp_import(65001);
}
