# -*- junos -*-
system {
    syslog {
        user * {
            any emergency;
        }
        file messages {
            any notice;
            authorization info;
        }
        file interactive-commands {
            interactive-commands any;
        }
    }
    root-authentication {
        encrypted-password "$1$hvN3T6oM$7b0iC9A4EcReHcRsdsZy.0"; ## SECRET-DATA
    }
    host-name router;
}
chassis {
    fpc 0 {
        pic 0 {
            tunnel-services {
                bandwidth 10g;
            }
        }
        lite-mode;
    }
}

interfaces {
    ge-0/0/0 {
        unit 0 {
            family inet {
                address 203.0.113.1/31;
            }
        }
    }
    ge-0/0/1 {
        unit 0 {
            family inet {
                address 203.0.113.3/31;
            }
        }
    }
    ge-0/0/2 {
        unit 0 {
            family inet {
                address 203.0.113.5/31;
            }
        }
    }
    ge-0/0/3 {
        unit 0 {
            family inet {
                address 203.0.113.7/31;
            }
        }
    }
    lt-0/0/0 {
        unit 1 {
            encapsulation ethernet;
            peer-unit 2;
            family inet {
                address 192.0.2.0/31;
            }
        }
        unit 2 {
            encapsulation ethernet;
            peer-unit 1;
            family inet {
                address 192.0.2.1/31;
            }
        }
    }
}
policy-options {
    policy-statement LOAD-BALANCE {
        then {
            load-balance per-packet;
        }
    }
    policy-statement NEXT-HOP-SELF {
        then next-hop self;
    }
    policy-statement NOTHING {
        then reject;
    }
    policy-statement STATIC {
        from protocol static;
        then accept;
    }
    policy-statement GENERATED {
        from protocol aggregate;
        then accept;
    }
    policy-statement BGP {
        from protocol bgp;
        then accept;
    }
    policy-statement VIA-OUTSIDE-PATH1 {
        term 1 {
            from {
                family inet;
                protocol bgp;
                next-hop 203.0.113.4;
                /* We only want to generate a route if we have a
                 * specific enough route containing the target.
                 * Ideally, it should be equal to the route announced
                 * but it could be a bit larger.
                 *
                 * If the target route disappear, the generated route
                 * disappear and we fallback to normal route, so no
                 * harm. However, we don't want to use something like
                 * 0.0.0.0/0 because the generated route would almost
                 * always be here and more specific and therefore
                 * would win while this router may have lost half of
                 * its routes. The filter could also contain a
                 * condition on the AS path length to avoid
                 * contributing to a route if the AS path is too long.
                 * The generated route being more specific than any
                 * other route, this is the only chance we have to act
                 * on this criteria.
                 *
                 * Here, we assume 198.51.100.0/24 is assigned to our
                 * ASN and each site will announce a more specific
                 * route.
                 */
                route-filter 198.51.100.0/24 longer;
                as-path OUTSIDE-ASN;
            }
            then accept;
        }
        then reject;
    }
    policy-statement VIA-OUTSIDE-PATH2 {
        term 1 {
            from {
                family inet;
                protocol bgp;
                next-hop 203.0.113.6;
                route-filter 198.51.100.0/24 longer;
                as-path OUTSIDE-ASN;
            }
            then accept;
        }
        then reject;
    }
    as-path OUTSIDE-ASN "^.*65001$";
}
routing-instances {
    router1 {
        instance-type virtual-router;
        interface ge-0/0/0.0;
        interface ge-0/0/2.0;
        interface lt-0/0/0.1;
        routing-options {
            router-id 2.2.2.2;
            autonomous-system 65000;
            static {
                route 198.51.100.1/32 {
                    next-hop 203.0.113.0;
                }
            }
            generate {
                route 198.51.100.33/32 {
                    policy VIA-OUTSIDE-PATH1;
                }
            }
        }
        protocols {
            bgp {
                log-updown;
                preference 140;
                group v4-OUTSIDE-PATH1 {
                    type external;
                    export [ STATIC NOTHING ];
                    peer-as 65005;
                    neighbor 203.0.113.4;
                }
                group v4-IBGP {
                    /* Not using loopback addresses for simplicity */
                    type internal;
                    export [ NEXT-HOP-SELF STATIC GENERATED BGP NOTHING ];
                    neighbor 192.0.2.1;
                }
            }
        }
    }
    router2 {
        instance-type virtual-router;
        interface ge-0/0/1.0;
        interface ge-0/0/3.0;
        interface lt-0/0/0.2;
        routing-options {
            router-id 3.3.3.3;
            autonomous-system 65000;
            static {
                route 198.51.100.1/32 {
                    next-hop 203.0.113.2;
                }
            }
            generate {
                route 198.51.100.34/32 {
                    policy VIA-OUTSIDE-PATH2;
                }
            }
        }
        protocols {
            bgp {
                log-updown;
                preference 140;
                group v4-OUTSIDE-PATH2 {
                    type external;
                    export [ STATIC NOTHING ];
                    peer-as 65006;
                    neighbor 203.0.113.6;
                }
                group v4-IBGP {
                    type internal;
                    export [ NEXT-HOP-SELF STATIC GENERATED BGP NOTHING ];
                    neighbor 192.0.2.0;
                }
            }
        }
    }
}
routing-options {
    forwarding-table {
        export LOAD-BALANCE;
    }
}
