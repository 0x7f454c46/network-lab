#!/bin/sh

cd "$(dirname "$(readlink -f "$0")")"
. ../common/lab-setup

spawn vm R1 network 1

run

## Large
loops=6
perloop=12
n1=1-9
n2=6-5

## Small
# loops=3
# perloop=5
# n1=1-1
# n2=3-2

# topology=orthogonal-loops
topology=multi-loops

name() {
    case $1 in
        $n1) echo n1 ;;
        $n2) echo n2 ;;
        *) echo $1 ;;
    esac
}
link() {
    from=$1
    to=$2
    ip link add name $from--$to type veth peer $to--$from
    ip link set up dev $from--$to
    ip link set up dev $to--$from
    ip link set $from--$to master br-$from
    ip link set $to--$from master br-$to
}

service mstpd -s
cat <<EOF > /sbin/bridge-stp
#!/bin/sh
exit 0
EOF
chmod +x /sbin/bridge-stp

# Create switches
for loop in $(seq 1 $loops); do
    for switch in $(seq 1 $perloop); do
        case $loop-$switch in
            $n1)
                priority=1
                ;;
            $n2)
                priority=2
                ;;
            *)
                priority=8
                ;;
        esac
        ip link add name br-$(name $loop-$switch) type bridge stp_state 1
        mstpctl addbridge br-$(name $loop-$switch)
        mstpctl settreeprio br-$(name $loop-$switch) 0 $priority
        ip link set up dev br-$(name $loop-$switch)
    done
done

case $topology in
    orthogonal-loops)
        # Horizontal links
        for loop in $(seq 1 $loops); do
            for switch in $(seq 1 $perloop); do
                from=$(name $loop-$switch)
                to=$(name $loop-$((switch%perloop + 1)))
                link $from $to
            done
        done
        # Vertical links
        for loop in $(seq 1 $((loops-1))); do
            for switch in ${n1#*-} ${n2#*-}; do
                from=$(name $loop-$switch)
                to=$(name $((loop+1))-$switch)
                link $from $to
            done
        done
        ;;
    multi-loops)
        for loop in $(seq 1 $loops); do
            # Horizontal links
            for switch in $(seq 1 $((perloop-1))); do
                case $(name $loop-$switch) in
                    n1|n2) ;;
                    *)
                        from=$(name $loop-$switch)
                        to=$(name $loop-$((switch + 1)))
                        link $from $to
                        ;;
                esac
            done
            # First non-n1 switch to n1, last non-n2 switch to n2
            first=
            last=
            for switch in $(seq 1 $perloop); do
                case $(name $loop-$switch) in
                    n1|n2) ;;
                    *)
                        last=$(name $loop-$switch)
                        [ -n "$first" ] || first=$last
                        ;;
                esac
            done
            link n1 $first
            link n2 $last
        done
        link n1 n2
        ;;
esac
