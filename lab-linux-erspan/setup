#!/bin/sh

cd "$(dirname "$(readlink -f "$0")")"
. ../common/lab-setup

# Which VM to spawn
spawn vm H1 network 1
spawn vm R1 network 1,2,3
spawn vm H2 network 2
spawn vm C1 network 3

run

case $uts in
    H1)
        ip addr add 203.0.113.10/24 dev eth0
        ip route add default via 203.0.113.1
        ;;
    H2)
        ip addr add 8.8.8.8/24 dev eth0
        ip route add default via 8.8.8.1
        ;;
    R1)
        ip addr add 203.0.113.1/24 dev eth0
        ip addr add 8.8.8.1/24 dev eth1
        ip addr add 10.1.2.10/24 dev eth2
        # Routing
        sysctl -qw net.ipv4.conf.eth0.forwarding=1
        sysctl -qw net.ipv4.conf.eth1.forwarding=1
        # ERSPAN: configure erspan1. erspan0 is the fallback tunnel, we don't want to use that.
        ip link add dev erspan1 type erspan seq key 30 local 10.1.2.10 remote 10.1.2.11 erspan_ver 1 erspan 30
        tc qdisc add dev eth1 handle ffff: ingress
        tc filter add dev eth1 parent ffff: \
           protocol ip u32 match ip sport 80 0xffff \
           action mirred egress mirror dev erspan1
        sysctl -qw net.ipv6.conf.erspan1.disable_ipv6=1
        # Avoid creating a backdoor from C1 to R1
        tc qdisc add dev erspan1 handle ffff: ingress
        tc filter add dev erspan1 parent ffff: matchall action drop
        ip link set up dev erspan1
        ;;
    C1)
        ip addr add 10.1.2.11/24 dev eth0
        # If we need to accept from any, we cannot set "local" either
        ip link add dev erspan1 type erspan seq key 30 erspan_ver 1 erspan 30
        sysctl -qw net.ipv6.conf.erspan1.disable_ipv6=1
        # Don't handle any packets received on this interface (we
        # shouldn't as the MAC address is not the right one, but it's
        # an extra safety).
        tc qdisc add dev erspan1 handle ffff: ingress
        tc filter add dev erspan1 parent ffff: matchall action drop
        ip link set up dev erspan1
        # tcpdump -pni erspan1
        ;;
esac
service nginx
